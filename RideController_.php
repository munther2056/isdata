<?php namespace App\Http\Controllers; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class RideController extends Controller { public function createRideRequest(Request $request) { $validated = $request->validate([ 'rider_id' => 'required|exists:riders,rider_id', 'pickup_location' => 'required|string', 'destination' => 'required|string', 'pickup_time' => 'required|date', 'distance' => 'required|numeric', 'fare' => 'required|numeric', ]); $ride = DB::table('rides')->insertGetId([ 'rider_id' => $validated['rider_id'], 'pickup_location' => $validated['pickup_location'], 'destination' => $validated['destination'], 'pickup_time' => $validated['pickup_time'], 'distance' => $validated['distance'], 'fare' => $validated['fare'], 'status' => 'pending',
]); return response()->json(['message' => 'Ride request created successfully', 'ride_id' => $ride], 201); } public function acceptRideRequest($rideId, Request $request) { $request->validate([ 'driver_id' => 'required|exists:drivers,driver_id', ]); $updated = DB::table('rides') ->where('ride_id', $rideId) ->update(['driver_id' => $request->driver_id, 'status' => 'accepted']); if ($updated) { return response()->json(['message' => 'Ride accepted successfully', 'ride_id' => $rideId]); } return response()->json(['message' => 'Ride not found or already accepted'], 404); } public function getRideDetails($rideId) { $ride = DB::table('rides') ->join('riders', 'rides.rider_id', '=', 'riders.rider_id') ->join('drivers', 'rides.driver_id', '=', 'drivers.driver_id') ->where('rides.ride_id', $rideId) ->select('rides.*', 'riders.name as rider_name', 'drivers.name as driver_name') ->first(); if (!$ride) { return response()->json(['message' => 'Ride not found'], 404); } return response()->json($ride); } public function completeRide($rideId, Request $request) { $request->validate([
'payment_method' => 'required|string', 'amount' => 'required|numeric', ]); $updated = DB::table('rides') ->where('ride_id', $rideId) ->update([ 'status' => 'completed', 'payment_method' => $request->payment_method, 'amount_paid' => $request->amount, ]); if ($updated) { return response()->json(['message' => 'Ride completed successfully', 'ride_id' => $rideId]); } return response()->json(['message' => 'Ride not found'], 404); }
